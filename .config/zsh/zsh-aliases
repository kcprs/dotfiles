alias md='mkdir -p'
function mcd(){ mkdir -p "$1" && cd "$1"; }
alias cl='clear'

# confirm before overwriting something
alias cp="cp -i"
alias mv='mv -i'
# alias rm='rm -i'
 
# git
alias gs="git switch"
alias gc="git commit"
alias gb="git branch"
alias gsu="git submodule update --init --recursive"
alias gf="git fetch"
alias gst="git stash"
alias gpl="git pull"
alias gps="git push"
alias gsh="git show -q HEAD"
alias gstat="git status"
alias gmb="git merge-base"
alias gw="git worktree"
function git-find-merge() {
    # Usage: git-find-merge <commit-SHA> [<branch>]
    # Find SHA of merge commit, which merged <commit> into <branch> (or HEAD if <branch> not given)
    commit=$1 && branch=${2:-HEAD} && (git rev-list "$commit".."$branch" --ancestry-path | cat -n; git rev-list "$commit".."$branch" --first-parent | cat -n) | sort -k2 -s | uniq -f1 -d | sort -n | tail -1 | cut -f2
}
function git-show-merge() {
    # Same as above, but shows more detail apart from just SHA
    merge=$(git-find-merge "$1" "$2") && [ -n "$merge" ] && git show "$merge" 
}

alias ls="eza --all"
alias la="eza --all --long --header --total-size --git"
alias lt="eza -T -L"
alias tree="eza --tree"
alias fda="fd -HI"
alias rgc="rg -C 5"
alias cat=bat
alias zj=zellij
alias zjw="zellij -l welcome"
alias p3=python3
alias docker=podman
alias pm=podman
alias nv=nvim
alias ng='nvim "+:Neogit kind=replace"'
alias cg=cargo
alias jt=just
alias jc="just --choose"
alias da="direnv allow"
alias de="direnv export"
alias jsonl_to_json='jq -R -s '\''split("\n") | map(select(length > 0) | fromjson)'\'''

function unln() {
    for unln_path in "$@"; do
        local unln_name=$(basename "$unln_path")
        local unln_tmp="/tmp/$unln_name"

        # Using directly from /bin to avoid problems with `alias cp="cp -i"`
        /bin/cp -Lf "$unln_path" "$unln_tmp"
        /bin/mv -f "$unln_tmp" "$unln_path"
    done
}
